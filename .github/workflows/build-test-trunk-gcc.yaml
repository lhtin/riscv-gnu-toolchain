name: Build and Test Trunk GCC

on:
  schedule:
    - cron:  '0 21 * * ?'
    - cron:  '0 6 * * ?'
  workflow_dispatch:


jobs:
  test-sim:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 600
    strategy:
      fail-fast: false
      matrix:
        os:     [ubuntu-20.04]
        mode:   [newlib]
        target: [rv32gcv_zvfh_zfh-ilp32d, rv64gcv_zvfh_zfh-lp64d, rv32gc-ilp32d, rv64gc-lp64d]
        sim:    [spike, qemu]
        cmodel: [medlow, medany]
    steps:
      - uses: actions/checkout@v2

      - name: install dependencies
        run: sudo ./.github/setup-apt.sh

      - name: clear space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: build toolchain
        run: |
          git submodule update --init --remote gcc
          TARGET_TUPLE=($(echo ${{ matrix.target }} | tr "-" "\n"))
          ./configure --prefix=/opt/riscv --with-arch=${TARGET_TUPLE[0]} --with-abi=${TARGET_TUPLE[1]} --with-sim=${{ matrix.sim }} --with-cmodel=${{ matrix.cmodel }}
          make -j $(nproc) ${{ matrix.mode }}

      - name: make report
        run: make report-${{ matrix.mode }} -j $(nproc)

      - name: save test log
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-${{ matrix.sim }}-${{ matrix.cmodel }}-${{ matrix.mode }}-test-result
          path: |
            build-gcc-newlib-stage2/gcc/testsuite/gcc/gcc.log
            build-gcc-newlib-stage2/gcc/testsuite/gcc/gcc.sum
